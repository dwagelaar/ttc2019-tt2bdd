aspect Navigation {

  // TruthTable

  inh TruthTable Port.containingTruthTable();
  inh TruthTable Row.containingTruthTable();
  inh TruthTable PortOrder.containingTruthTable();
  inh TruthTable Cell.containingTruthTable();
  eq TruthTable.getPort().containingTruthTable() = this;
  eq TruthTable.getRow().containingTruthTable() = this;

  syn List<OutputPort> TruthTable.outputPorts() {
    List<OutputPort> result = new ArrayList<>();
    for (Port port: getPortList()) {
      if (!port.isInput()) {
        result.add(port.asOutput());
      }
    }
    return Collections.unmodifiableList(result);
  }

  syn List<InputPort> TruthTable.inputPorts() {
    List<InputPort> result = new ArrayList<>();
    for (Port port: getPortList()) {
      if (port.isInput()) {
        result.add(port.asInput());
      }
    }
    return Collections.unmodifiableList(result);
  }

  syn boolean Port.isInput() = false;
  eq InputPort.isInput() = true;

  syn InputPort Port.asInput() = null;
  eq InputPort.asInput() = this;

  syn OutputPort Port.asOutput() = null;
  eq OutputPort.asOutput() = this;

  syn Boolean Row.valueFor(Port port) {
    for (Cell cell : getCellList()) {
      if (cell.getPort().equals(port)) {
        return cell.getValue();
      }
    }
    return null;
  }

  syn Boolean BDD_Leaf.valueFor(Port port) {
    for (BDD_Assignment assignment : getAssignmentList()) {
      if (assignment.getPort().equals(port)) {
        return assignment.getValue();
      }
    }
    return null;
  }

  // BDT

  syn boolean BDT_Tree.isSubtree() = false;
  eq BDT_Subtree.isSubtree() = true;

  syn BDT_Subtree BDT_Tree.asSubtree() = null;
  eq BDT_Subtree.asSubtree() = this;

  syn boolean BDT_Port.isInput() = false;
  eq BDT_InputPort.isInput() = true;

  syn BDT_InputPort BDT_Port.asInput() = null;
  eq BDT_InputPort.asInput() = this;

  syn BDT_OutputPort BDT_Port.asOutput() = null;
  eq BDT_OutputPort.asOutput() = this;

  inh BDT BDT_Tree.bdt();
  eq BDT.getTree().bdt() = this;
  eq BDT.getPort().bdt() = this;

  // BDD

  syn boolean BDD_Tree.isSubtree() = false;
  eq BDD_Subtree.isSubtree() = true;

  syn BDD_Subtree BDD_Tree.asSubtree() = null;
  eq BDD_Subtree.asSubtree() = this;

  syn boolean BDD_Port.isInput() = false;
  eq BDD_InputPort.isInput() = true;

  syn BDD_InputPort BDD_Port.asInput() = null;
  eq BDD_InputPort.asInput() = this;

  syn BDD_OutputPort BDD_Port.asOutput() = null;
  eq BDD_OutputPort.asOutput() = this;

  inh BDD BDD_Tree.bdd();
  eq BDD.getTree().bdd() = this;
  eq BDD.getPort().bdd() = this;

  // Shared Attributes

  inh ASTNode ASTNode.root();
  eq TruthTable.getPort().root() = this;
  eq TruthTable.getRow().root() = this;

  eq BDT.getTree().root() = this;
  eq BDT.getPort().root() = this;

  eq BDD.getTree().root() = this;
  eq BDD.getPort().root() = this;

  syn ASTNode TruthTable.root() = this;
  syn ASTNode BDT.root() = this;

}
