group 'de.tudresden.inf.st'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'idea'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

idea {
    module {
        generatedSourceDirs += file('./src/gen/java')
    }
}

configurations {
    ragdoc
}

sourceSets {
    main {
        java.srcDir "src/gen/java"
    }
}

test {
    useJUnitPlatform()
}

task cleanRagdoc(type: Delete) {
    group = 'documentation'
    new File(docsDir, 'ragdoc').deleteDir()
}

task reader (type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    group = 'verification'
    main = 'de.tudresden.inf.st.ttc19.TruthTableReader'
}

dependencies {

    compile 'org.jastadd:jastadd:2.3.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.4.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.4.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.4.0'
    testCompile 'org.assertj:assertj-core:3.12.1'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.8.8.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.10.0'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.10.0'

    ragdoc files('libs/rd-builder.jar')
}

run {
    mainClassName = 'de.tudresden.inf.st.ttc19.Driver'
    standardInput = System.in
    if (project.hasProperty("appArgs")) {
        args Eval.me(appArgs)
    }
}

buildscript {
    repositories.mavenCentral()
}


jar {
    manifest {
        attributes(
                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-Class': 'de.tudresden.inf.st.ttc19.Main'
        )
    }
}

task preprocess(type: JavaExec) {
    group = 'Build'
    main = "-jar"

    doFirst {
        delete "./src/gen/jastadd/*.ast"
        delete "./src/gen/jastadd/TTBDD.jadd"
        delete "./src/gen/jastadd/TTBDDRefResolver.jadd"
        mkdir  "src/gen/jastadd/"
    }

    args = [
            "libs/relast.jar",
            "./src/main/jastadd/TruthTable.relast",
            "./src/main/jastadd/BDT.relast",
            "./src/main/jastadd/BDD.relast",
            "./src/main/jastadd/PortOrder.relast",
            "--listClass=ArrayList",
            "--jastAddList=JastAddList",
            "--useJastAddNames",
            "--file",
            "--resolverHelper",
            "--grammarName=./src/gen/jastadd/TTBDD"
    ]

    inputs.files file("./src/main/jastadd/TruthTable.relast"), file("./src/main/jastadd/BDT.relast"), file("./src/main/jastadd/BDD.relast"), file("./src/main/jastadd/PortOrder.relast"), file("./libs/relast.jar")
    outputs.files file("./src/gen/jastadd/TTBDD.ast"), file("./src/gen/jastadd/TTBDD.jadd"), file("./src/gen/jastadd/TTBDDRefResolver.jadd"), file('./src/gen/jastadd/TTBDDResolverStubs.jrag')
}

task jastadd2(type: JavaExec) {
    classpath=configurations.compile
    group = 'Build'
    main = 'org.jastadd.JastAdd'
    args = ["--cache=all",
            "--flush=full",
            "--list=JastAddList",
            "--rewrite=cnta",
            "--visitCheck=false",
            "--package=de.tudresden.inf.st.ttc19.jastadd.model",
            "--o=src/gen/java"
    ] + fileTree("./src/main/jastadd/").matching {exclude "*.relast"} + file("./src/gen/jastadd/TTBDD.ast") + file("./src/gen/jastadd/TTBDD.jadd") + file("./src/gen/jastadd/TTBDDRefResolver.jadd") + file('./src/gen/jastadd/TTBDDResolverStubs.jrag')

    doFirst {
        delete fileTree('src/gen/java/')
        mkdir 'src/gen/java/'
    }

    inputs.files fileTree("src/main/jastadd/") + fileTree("src/gen/jastadd/") + file("libs/jastadd2.jar")
    outputs.files fileTree("src/gen/java/")
}

clean.doFirst {
    delete "./src/gen/jastadd/TTBDD.ast"
    delete "./src/gen/jastadd/TTBDD.jadd"
    delete "./src/gen/jastadd/TTBDDRefResolver.jadd"
    delete "./src/gen/jastadd/TTBDDResolverStubs.jrag"
}


jastadd2.dependsOn preprocess
compileJava.dependsOn jastadd2
