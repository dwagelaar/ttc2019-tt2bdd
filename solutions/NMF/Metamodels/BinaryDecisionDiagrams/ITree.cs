//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;

namespace TTC2019.BinaryDecision.Metamodels.BinaryDecisionDiagrams.BDD
{
    
    
    /// <summary>
    /// The public interface for Tree
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(Tree))]
    [XmlDefaultImplementationTypeAttribute(typeof(Tree))]
    [ModelRepresentationClassAttribute("https://www.transformation-tool-contest.eu/2019/bdd#//Tree")]
    public interface ITree : IModelElement
    {
        
        /// <summary>
        /// The ownerBDD property
        /// </summary>
        [BrowsableAttribute(false)]
        [XmlElementNameAttribute("ownerBDD")]
        [DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility.Hidden)]
        [XmlAttributeAttribute(true)]
        [XmlOppositeAttribute("tree")]
        IBDD OwnerBDD
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ownerSubtreeForZero property
        /// </summary>
        [BrowsableAttribute(false)]
        [XmlElementNameAttribute("ownerSubtreeForZero")]
        [DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility.Hidden)]
        [XmlAttributeAttribute(true)]
        [XmlOppositeAttribute("treeForZero")]
        ISubtree OwnerSubtreeForZero
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ownerSubtreeForOne property
        /// </summary>
        [BrowsableAttribute(false)]
        [XmlElementNameAttribute("ownerSubtreeForOne")]
        [DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility.Hidden)]
        [XmlAttributeAttribute(true)]
        [XmlOppositeAttribute("treeForOne")]
        ISubtree OwnerSubtreeForOne
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the OwnerBDD property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OwnerBDDChanging;
        
        /// <summary>
        /// Gets fired when the OwnerBDD property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OwnerBDDChanged;
        
        /// <summary>
        /// Gets fired before the OwnerSubtreeForZero property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OwnerSubtreeForZeroChanging;
        
        /// <summary>
        /// Gets fired when the OwnerSubtreeForZero property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OwnerSubtreeForZeroChanged;
        
        /// <summary>
        /// Gets fired before the OwnerSubtreeForOne property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OwnerSubtreeForOneChanging;
        
        /// <summary>
        /// Gets fired when the OwnerSubtreeForOne property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> OwnerSubtreeForOneChanged;
    }
}

